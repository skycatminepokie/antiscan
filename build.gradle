plugins {
	id 'fabric-loom' version '1.10-SNAPSHOT'
	id 'maven-publish'
	id "dev.kikugie.j52j" version "2.0"
	id "me.modmuss50.mod-publish-plugin" version "0.8.4"
}

def mcVersion = stonecutter.current.version
def fullVersion = mod_version + "+" + mcVersion
version = fullVersion
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
	// Add repositories to retrieve artifacts from in here.
	// You should only use this when depending on other mods because
	// Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
	// See https://docs.gradle.org/current/userguide/declaring_repositories.html
	// for more information about repositories.
}

loom {
	splitEnvironmentSourceSets()

	mods {
		"antiscan" {
			sourceSet sourceSets.main
			sourceSet sourceSets.client
		}
	}

	runConfigs.all {
		ideConfigGenerated true
	}

}

fabricApi {
	configureDataGeneration {
		client = true
	}
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${stonecutter.current.project}"
	mappings "net.fabricmc:yarn:${property('yarn_mappings')}:v2"
	modImplementation "net.fabricmc:fabric-loader:${property('loader_version')}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${property('fabric_version')}"
	include(modImplementation('me.lucko:fabric-permissions-api:0.3.1'))
	compileOnly 'org.checkerframework:checker-qual:3.4.0'
	testCompileOnly 'org.checkerframework:checker-qual:3.4.0'
}

processResources {
	inputs.property "version", fullVersion
	inputs.property "fabric_version", fabric_version
	inputs.property "loader_version", loader_version
	inputs.property "java", stonecutter.eval(mcVersion, ">=1.20.5") ? "21" : "17"
	inputs.property "minecraft", mcVersion

	def map = [
			"version"       : fullVersion,
			"fabric_version": fabric_version,
			"loader_version": loader_version,
			"java"          : stonecutter.eval(mcVersion, ">=1.20.5") ? "21" : "17",
			"minecraft"     : mcVersion.toString()
	]

	filesMatching("fabric.mod.json") {
		expand(map)
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = stonecutter.eval(mcVersion, ">=1.20.5") ? 21 : 17
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()
	def java = stonecutter.eval(mcVersion, ">=1.20.5") ? JavaVersion.VERSION_21 : JavaVersion.VERSION_17
	sourceCompatibility = java
	targetCompatibility = java
}

jar {
	inputs.property "archivesName", project.base.archivesName

	from("LICENSE") {
		rename { "${it}_${inputs.properties.archivesName}"}
	}
}

// configure the maven publication
publishing {
	publications {
		create("mavenJava", MavenPublication) {
			artifactId = project.archives_base_name
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}

tasks.register('buildAndCollect', Copy) {
	group = "build"
	from(tasks.remapJar.archiveFile)
	into(rootProject.layout.buildDirectory.file("libs/${mod_version}"))
}

publishMods {
	file = remapJar.archiveFile
	type = BETA
	modLoaders.add("fabric")

	changelog = rootProject.file('CHANGELOG.md').text
	displayName = "AntiScan v${mod_version} for Minecraft ${mcVersion}"
	dryRun = providers.environmentVariable("DRY_RUN").getOrElse("false") == "true"

	github {
		accessToken = providers.environmentVariable("GITHUB_TOKEN")
		repository = "skycatminepokie/antiscan"
		commitish = providers.environmentVariable("GITHUB_REF_NAME").getOrElse("master")
	}

	modrinth {
		accessToken = providers.environmentVariable("MODRINTH_API_KEY")
		projectId = "MYtTNHk4"
		minecraftVersions.add(mcVersion)

		projectDescription = providers.fileContents(layout.projectDirectory.file("README.md")).asText

		requires("fabric-api")
		announcementTitle = "Download v${fullVersion} from Modrinth"
	}

	discord {
		username = "Mod Updates"

		avatarUrl = "https://cataas.com/cat?type=square"

		webhookUrl = providers.environmentVariable("DISCORD_WEBHOOK")
		dryRunWebhookUrl = providers.environmentVariable("DISCORD_WEBHOOK_DRY_RUN")

		content = changelog.map {
			"# A new version of AntiScan is out! \n" + it
		}
	}
}