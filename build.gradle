plugins {
	id 'fabric-loom' version '1.10-SNAPSHOT'
	id 'maven-publish'
	id "dev.kikugie.j52j" version "1.0"
}

version = stonecutter.current.version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
	// Add repositories to retrieve artifacts from in here.
	// You should only use this when depending on other mods because
	// Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
	// See https://docs.gradle.org/current/userguide/declaring_repositories.html
	// for more information about repositories.
}

loom {
	splitEnvironmentSourceSets()

	mods {
		"antiscan" {
			sourceSet sourceSets.main
			sourceSet sourceSets.client
		}
	}

	runConfigs.all {
		ideConfigGenerated true
	}

}

fabricApi {
	configureDataGeneration {
		client = true
	}
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${stonecutter.current.project}"
	mappings "net.fabricmc:yarn:${property('yarn_mappings')}:v2"
	modImplementation "net.fabricmc:fabric-loader:${property('loader_version')}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${property('fabric_version')}"
	compileOnly 'org.checkerframework:checker-qual:3.4.0'
	testCompileOnly 'org.checkerframework:checker-qual:3.4.0'
}

processResources {
	inputs.property "version", stonecutter.current.version

	filesMatching("fabric.mod.json") {
		expand "version": stonecutter.current.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = stonecutter.eval(version, ">=1.20.5") ? 21 : 17
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()
	def java = stonecutter.eval(version, ">=1.20.5") ? JavaVersion.VERSION_21 : JavaVersion.VERSION_17
	sourceCompatibility = java
	targetCompatibility = java
}

jar {
	inputs.property "archivesName", project.base.archivesName

	from("LICENSE") {
		rename { "${it}_${inputs.properties.archivesName}"}
	}
}

// configure the maven publication
publishing {
	publications {
		create("mavenJava", MavenPublication) {
			artifactId = project.archives_base_name
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}